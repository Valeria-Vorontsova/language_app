<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="clmn_Word.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmn_Translation.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AJHM/wMYaDJACkjBfQAAAABJRU5ErkJggg==
</value>
  </data>
</root>